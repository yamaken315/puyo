{"mappings":"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","sources":["index.ts"],"sourcesContent":["const canvas = document.getElementById(\"canvas\") as HTMLCanvasElement;\nconst ctx = canvas.getContext(\"2d\") as CanvasRenderingContext2D;\nconst fieldWidth = 6;\nconst fieldHeight = 12;\nconst blockSize = 30;\n//change size of canvas to fit the field\ncanvas.width = fieldWidth * blockSize;\ncanvas.height = fieldHeight * blockSize;\n\nlet currentPuyoPair: PuyoPair | null = null;\nlet currentX: number = 0;\nlet currentY: number = 0;\n\nconst fieldState: number[][] = []; //state of field\nfor (let y = 0; y < fieldHeight; y++) {\n  fieldState[y] = [];\n  for (let x = 0; x < fieldWidth; x++) {\n    fieldState[y][x] = 0;\n  }\n}\n\nfunction drawField() {\n  ctx.clearRect(0, 0, canvas.width, canvas.height); //clear the canvas\n  //draw grid lines\n\n  ctx.strokeStyle = \"lightgray\";\n  ctx.lineWidth = 0.5;\n  for (let x = 0; x <= fieldWidth; x++) {\n    ctx.beginPath();\n    ctx.moveTo(x * blockSize, 0);\n    ctx.lineTo(x * blockSize, canvas.height);\n    ctx.stroke();\n  }\n  for (let y = 0; y <= fieldHeight; y++) {\n    ctx.beginPath();\n    ctx.moveTo(0, y * blockSize);\n    ctx.lineTo(canvas.width, y * blockSize);\n    ctx.stroke();\n  }\n  // generate puyoPair\n  const puyoPair = generatePuyoPair();\n\n  //draw puyoPair in operation\n  if (currentPuyoPair) {\n    drawPuyoPair(puyoPair, currentX, currentY);\n  }\n}\n\ngenerateNewPuyoPair();\ndrawField();\ndocument.addEventListener(\"keydown\", handleKeyDown);\n\n//ランダムな色を生成する関数を作成\nfunction generateRandomColor(): string {\n  const colors = [\"red\", \"blue\", \"green\", \"yellow\", \"purple\"];\n  const randomIndex = Math.floor(Math.random() * colors.length); //0 <= x < colors.length までの数値を小数点切り捨てする\n  return colors[randomIndex];\n}\ninterface Puyo {\n  color: string;\n}\nfunction generatePuyo(): Puyo {\n  const color = generateRandomColor();\n  return { color };\n}\ninterface PuyoPair {\n  puyo1: Puyo;\n  puyo2: Puyo;\n}\n\nfunction generatePuyoPair(): PuyoPair {\n  const puyo1 = generatePuyo(); // 1st puyo\n  const puyo2 = generatePuyo(); //2nd puyo\n  return {\n    puyo1: puyo1,\n    puyo2: puyo2,\n  };\n}\nfunction generateNewPuyoPair() {\n  currentPuyoPair = generatePuyoPair();\n  currentX = 1;\n  currentY = 0;\n}\n\nfunction drawPuyoPair(puyoPair: PuyoPair, startX: number, startY: number) {\n  drawPuyo(puyoPair.puyo1, startX, startY);\n  drawPuyo(puyoPair.puyo2, startX, startY + 1);\n}\n\nfor (let i = 0; i < 10; i++) {\n  console.log(i + 1, \"番目の色:\", generatePuyo());\n}\n\nfunction drawPuyo(puyo: Puyo, x: number, y: number) {\n  if (!ctx) return; // ctxがnullの場合は処理中断\n  ctx.fillStyle = puyo.color;\n  ctx.beginPath();\n  ctx.arc(\n    x * blockSize + blockSize / 2, //x of center\n    y * blockSize + blockSize / 2, //y\n    (blockSize / 2) * 0.9, //radius of  circle (smaller than block)\n    0, // draw from 0 rad\n    Math.PI * 2 //draw to 2PI rad (360 degree)\n  );\n  ctx.closePath();\n  ctx.fill();\n}\n\nfunction handleKeyDown(event: KeyboardEvent) {\n  switch (event.key) {\n    case \"ArrowLeft\":\n      movePuyoHorizontal(-1);\n      break;\n    case \"ArrawRight\":\n      movePuyoHorizontal(1);\n      break;\n    case \"ArrowDown\":\n      movePuyoVertical();\n      break;\n    case \"c\":\n      rotatePuyoRight();\n      break;\n    case \"x\":\n      rotatePuyoLeft();\n      break;\n  }\n  drawField();\n}\nfunction isPositionValid(x: number, y: number): boolean {\n  if (x < 0 || x >= fieldWidth || y >= fieldHeight) {\n    return false; //out of bounds\n  }\n  if (y < 0) {\n    return true; //\n  }\n  if (fieldState[y][x] !== 0) {\n    return false; // already exists\n  }\n  return true;\n}\n\nfunction movePuyoHorizontal(direction: number) {\n  if (!currentPuyoPair) return;\n  const nextX1 = currentX + direction;\n  const nextX2 = currentX + direction;\n}\n\nfunction movePuyoVertical() {\n  throw new Error(\"Function not implemented.\");\n}\n\nfunction rotatePuyoRight() {\n  throw new Error(\"Function not implemented.\");\n}\n\nfunction rotatePuyoLeft() {\n  throw new Error(\"Function not implemented.\");\n}\n"],"names":[],"version":3,"file":"index.242b51c6.js.map","sourceRoot":"/__parcel_source_root/"}